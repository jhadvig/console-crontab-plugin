{"version":3,"file":"exposed-CronTabDetails.937b4b7a38d3cf4bbf7b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,uDAAuD;AACvD,qBAAqB;AACU;AAEc;AAC7C,8DAA8D;AAIf;AACuB;AAGtB;AAQhD,MAAM,cAAc,GAA+B,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/E,0CAA0C;IAC1C,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,0FAAmB,CAAoB;QAClE,gBAAgB,EAAE;YAChB,OAAO,EAAE,oBAAoB;YAC7B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI;SAChB;QACD,IAAI;QACJ,IAAI;QACJ,SAAS;KACV,CAAC,CAAC;IAEH,MAAM,KAAK,GAAG,0CAAa,CACzB,GAAG,EAAE,CAAC;QACJ;YACE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,kBAAkB;SAC9B;QACD;YACE,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,wDAAe;SAC3B;KACF,EACD,EAAE,CACH,CAAC;IAEF,OAAO,CACL;;QAIG,MAAM,CAAC,CAAC,CAAC;QACR,wDAAwD;QACxD,uBAAuB;QACvB,eAAe;QACf,mCAAmC;QACnC,8BAA8B;QAC9B,wBAAwB;QACxB,KAAK;QACL,mGAAK,CACN,CAAC,CAAC,CAAC,CACF,iDAAC,4DAAQ;YACP,iDAAC,8DAAO,OAAG,CACF,CACZ,CACA,CACJ,CAAC;AACJ,CAAC,CAAC;AASF,MAAM,kBAAkB,GAAsC,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE;IAEpF,OAAO,CACL;QACE,iDAAC,+DAAW;YACV,iDAAC,yDAAK,IAAC,YAAY,EAAC,IAAI,EAAC,SAAS,EAAC,oBAAoB,sBAE/C,CACI,CACV,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,iEAAe,cAAc,EAAC","sources":["webpack://crontab-plugin/./views/CronTabDetails.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-env node */\nimport * as React from 'react';\n\nimport Loading from '@crontab-utils/Loading';\n// import { CronTabModel } from '@crontab-model/CronTabModel';\nimport { \n  useK8sWatchResource, \n  K8sResourceCommon,\n} from '@openshift-console/dynamic-plugin-sdk';\nimport { Bullseye, PageSection, Title } from '@patternfly/react-core';\n\nimport { RouteComponentProps } from 'react-router';\nimport CronTabYAMLPage from './CronTabYAMLPage';\n\ntype CronTabPageProps = {\n  name: string;\n  namespace: string;\n  kind: string;\n};\n\nconst CronTabNavPage: React.FC<CronTabPageProps> = ({ name, namespace, kind }) => {\n  // const { t } = useKubevirtTranslation();\n  const [dataSource, loaded] = useK8sWatchResource<K8sResourceCommon>({\n    groupVersionKind: {\n      \"group\": \"stable.example.com\",\n      \"kind\": \"CronTab\",\n      \"version\": \"v1\"\n    },\n    kind,\n    name,\n    namespace,\n  });\n\n  const pages = React.useMemo(\n    () => [\n      {\n        href: '',\n        name: 'Details',\n        component: CronTabDetailsPage,\n      },\n      {\n        href: 'yaml',\n        name: 'YAML',\n        component: CronTabYAMLPage,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      {/* <DataSourcePageTitle dataSource={dataSource} namespace={namespace} name={name} /> */}\n      \n      TEST\n      {loaded ? (\n        // <HorizontalNav pages={pages} resource={dataSource} />\n        // <ResourceDetailsPage\n        //   {...props}\n        //   getResourceStatus={nodeStatus}\n        //   menuActions={menuActions}\n        //   pagesFor={pagesFor}\n        // />\n        <></>\n      ) : (\n        <Bullseye>\n          <Loading />\n        </Bullseye>\n      )}\n    </>\n  );  \n};\n\ntype CronTabDetailsPageProps = RouteComponentProps<{\n  ns: string;\n  name: string;\n}> & {\n  obj?: any;\n};\n\nconst CronTabDetailsPage: React.FC<CronTabDetailsPageProps> = ({ obj: dataSource }) => {\n\n  return (\n    <div>\n      <PageSection>\n        <Title headingLevel=\"h2\" className=\"co-section-heading\">\n          CronTab details\n        </Title>\n      </PageSection>\n    </div>\n  );\n};\n\nexport default CronTabNavPage;"],"names":[],"sourceRoot":""}