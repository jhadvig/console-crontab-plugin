{"version":3,"file":"exposed-CronTabsList-chunk.js","mappings":"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","sources":["webpack://crontab-plugin/./models/CronTabModel.ts","webpack://crontab-plugin/./models/index.ts","webpack://crontab-plugin/./utils/components/ModalProvider/ModalProvider.tsx","webpack://crontab-plugin/./utils/utils.ts","webpack://crontab-plugin/./views/CronTabsList.tsx","webpack://crontab-plugin/./views/components/ConfirmActionMessage/ConfirmActionMessage.tsx","webpack://crontab-plugin/./views/components/CronTabActions.tsx","webpack://crontab-plugin/./views/components/TabModal/TabModal.tsx"],"sourcesContent":["import { modelToRef } from '@crontab-utils/utils';\nimport { K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';\nimport { K8sModel } from '@openshift-console/dynamic-plugin-sdk/lib/api/common-types';\n\nexport const CronTabModel: K8sModel = {\n  label: 'CronTab',\n  labelPlural: 'CronTabs',\n  apiVersion: 'v1',\n  apiGroup: 'stable.example.com',\n  plural: 'crontabs',\n  abbr: 'crontabs',\n  namespaced: true,\n  kind: 'CronTab',\n  id: 'crontab',\n  crd: true,\n};\n\nexport type CronTabKind = K8sResourceCommon & {\n  spec?: {\n    [key: string]: any;\n  };\n  status?: { [key: string]: any };\n};\n\nexport const cronTabModelRef = modelToRef(CronTabModel);","export * from './CronTabModel';","import * as React from 'react';\n\nexport type ModalComponentProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  appendTo: () => HTMLElement;\n};\nexport type ModalComponent = React.ComponentType<ModalComponentProps>;\n\nexport type ModalContextType = {\n  /** the modal component to render */\n  modal?: ModalComponent;\n  /** whether the modal is open */\n  isOpen?: boolean;\n  /** callback to close the modal */\n  onClose?: () => void;\n  /** receives a modal component as an argument and injects it to the dom, the component callback will receive the following parameters,\n   * isOpen: open state of the modal\n   * onClose: callback to close the modal\n   * appendTo: callback to get the dom element to append the modal to\n   * @example\n   * const { createModal } = useModal();\n   *\n   * createModal(({ isOpen, onClose, appendTo }) => (\n   *  <ExampleModal isOpen={isOpen} onClose={onClose} appendTo={appendTo} />\n   * ))\n   *\n   */\n  createModal?: (modal: ModalComponent) => void;\n};\n\nexport const ModalContext = React.createContext<ModalContextType>({});\n/**\n * A hook that returns a global modal context. This context is used to inject a modal component to the dom.\n * @example\n * const { createModal } = useModal();\n *\n * createModal(({ isOpen, onClose, appendTo }) => (\n *  <ExampleModal isOpen={isOpen} onClose={onClose} appendTo={appendTo} />\n * ))\n */\nexport const useModal = () => React.useContext(ModalContext);\n\nexport const useModalValue = (): ModalContextType => {\n  const [modal, setModal] = React.useState<ModalComponent>();\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const createModal = (newModal: ModalComponent) => {\n    setIsOpen(true);\n    setModal(() => newModal);\n  };\n\n  const onClose = () => {\n    setIsOpen(false);\n    setModal(undefined);\n  };\n\n  return { modal, isOpen, createModal, onClose };\n};\n\nexport const ModalProvider: React.FC<{ value: ModalContextType }> = ({ value = {}, children }) => {\n  const { modal: Modal, isOpen, onClose } = value;\n\n  return (\n    <ModalContext.Provider value={value}>\n      {Modal && isOpen && (\n        <Modal\n          isOpen\n          onClose={onClose}\n          appendTo={() => document.querySelector('#modal-container')}\n        />\n      )}\n      {children}\n    </ModalContext.Provider>\n  );\n};\n","import { K8sModel } from '@openshift-console/dynamic-plugin-sdk/lib/api/common-types';\n\nconst modelToRef = (obj: K8sModel) => `${obj.apiGroup}~${obj.apiVersion}~${obj.kind}`;\nconst modelToGroupVersionKind = (obj: K8sModel) => ({\n  version: obj.apiVersion,\n  kind: obj.kind,\n  group: obj.apiGroup,\n});\n\nexport { modelToGroupVersionKind, modelToRef };","import React from 'react';\nimport { modelToGroupVersionKind, modelToRef } from '@crontab-utils/utils';\nimport {\n  ListPageBody,\n  ListPageHeader,\n  useK8sWatchResource,\n  K8sResourceCommon,\n  VirtualizedTable,\n  ListPageFilter,\n  useListPageFilter,\n  Timestamp,\n  ListPageCreate,\n} from '@openshift-console/dynamic-plugin-sdk';\nimport { CronTabModel } from '@crontab-model/CronTabModel';\nimport { sortable } from '@patternfly/react-table';\n\nimport { ResourceLink, RowProps, TableData } from '@openshift-console/dynamic-plugin-sdk';\nimport { TableColumn } from '@openshift-console/dynamic-plugin-sdk';\nimport { CronTabKind } from '@crontab-model/CronTabModel';\nimport CronTabActions from './components/CronTabActions';\n// import { customActionsToggle, defaultActions } from './components/CronTabActions';\n// import './DataSourcesList.scss';\n\ntype CronTabsListProps = {\n  kind: string;\n  namespace: string;\n};\n\nconst CronTabsList: React.FC<CronTabsListProps> = ({ kind, namespace }) => {\n  const [cronTabs, loaded, loadError] = useK8sWatchResource<K8sResourceCommon[]>({\n    isList: true,\n    groupVersionKind: {\n      \"group\": \"stable.example.com\",\n      \"kind\": \"CronTab\",\n      \"version\": \"v1\"\n    },\n    namespaced: true,\n    namespace,\n  });\n  // const { t } = useTranslation();\n  const columns = useCronTabColumns();\n  const [data, filteredData, onFilterChange] = useListPageFilter(cronTabs);\n\n  return (\n    <>\n      <ListPageHeader title={'CronTab'}>\n        <ListPageCreate groupVersionKind={modelToRef(CronTabModel)}>Create CronTab</ListPageCreate>\n      </ListPageHeader>\n      <ListPageBody>\n      <ListPageFilter\n            data={data}\n            loaded={loaded}\n            onFilterChange={onFilterChange}\n          />\n        <VirtualizedTable<K8sResourceCommon>\n          data={filteredData}\n          unfilteredData={cronTabs}\n          loaded={loaded}\n          loadError={loadError}\n          columns={columns}\n          Row={cronTabsListRow}\n        />\n      </ListPageBody>\n    </>\n  );\n};\n\nconst cronTabsListRow: React.FC<RowProps<CronTabKind>> = ({\n  obj,\n  activeColumnIDs,\n}) => {\n\n  return (\n    <>\n      <TableData id=\"name\" activeColumnIDs={activeColumnIDs} className=\"pf-m-width-15\">\n        <ResourceLink\n          groupVersionKind={modelToGroupVersionKind(CronTabModel)}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData id=\"namespace\" activeColumnIDs={activeColumnIDs} className=\"pf-m-width-15\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData id=\"cronspec\" activeColumnIDs={activeColumnIDs} className=\"pf-m-width-15\">\n        <ResourceLink kind=\"cronspec\" name={obj.spec.cronSpec} hideIcon />\n      </TableData>\n      <TableData id=\"image\" activeColumnIDs={activeColumnIDs} className=\"pf-m-width-15\">\n        {obj.spec.image}\n      </TableData>\n      <TableData id=\"replicas\" activeColumnIDs={activeColumnIDs} className=\"pf-m-width-15\">\n        {obj.spec.replicas}\n      </TableData>\n      <TableData id=\"created\" activeColumnIDs={activeColumnIDs} className=\"pf-m-width-15\">\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <CronTabActions obj={obj} />\n      {/* <ActionsColumn items={defaultActions} actionsToggle={customActionsToggle} /> */}\n      {/* <TableData className={Kebab.columnClass} activeColumnIDs={activeColumnIDs} id=\"\">\n        <LazyActionMenu context={context} isDisabled={phase === 'Terminating'} />\n      </TableData> */}\n\n      {/* <ActionGroup variant={ActionMenuVariant.DROPDOWN}> */}\n      {/* <DataSourceActions dataSource={obj} isKebabToggle /> */}\n    </>\n  );\n};\n\nconst useCronTabColumns = () => {\n  const columns: TableColumn<K8sResourceCommon>[] = React.useMemo(\n    () => [\n      {\n        title: 'Name',\n        id: 'name',\n        transforms: [sortable],\n        sort: 'metadata.name',\n        props: { className: 'pf-m-width-15' },\n      },\n      {\n        title: 'Namespace',\n        id: 'namespace',\n        transforms: [sortable],\n        sort: 'metadata.namespace',\n        props: { className: 'pf-m-width-15' },\n      },\n      {\n        title: 'CronSpec',\n        id: 'cronspec',\n        transforms: [sortable],\n        sort: 'spec.cronSpec',\n        props: { className: 'pf-m-width-15' },\n      },\n      {\n        title: 'Image',\n        id: 'image',\n        transforms: [sortable],\n        sort: 'spec.image',\n        props: { className: 'pf-m-width-15' },\n      },\n      {\n        title: 'Replicas',\n        id: 'replicas',\n        transforms: [sortable],\n        sort: 'spec.replicas',\n        props: { className: 'pf-m-width-15' },\n      },\n      {\n        title: 'Created',\n        id: 'created',\n        transforms: [sortable],\n        sort: 'metadata.creationTimestamp',\n        props: { className: 'pf-m-width-15' },\n      },\n      {\n        title: '',\n        id: 'actions',\n        props: { className: 'dropdown-kebab-pf pf-c-table__action' },\n      },\n    ],\n    [],\n  );\n\n  return columns;\n};\n\nexport default CronTabsList;\n","import * as React from 'react';\nimport { Trans } from 'react-i18next';\nimport { CronTabKind } from '@crontab-model';\n\ntype ConfirmActionMessageProps = {\n  obj: CronTabKind;\n  action?: string;\n};\n\nconst ConfirmActionMessage: React.FC<ConfirmActionMessageProps> = ({ obj, action = 'delete' }) => {\n  const t = (key: string) => key;\n  const objNamespace = obj?.metadata?.namespace;\n\n  return (\n    <Trans t={t}>\n      Are you sure you want to {action} <strong>{obj?.metadata?.name}</strong>\n      {objNamespace && (\n        <>\n          {' '}\n          in namespace <strong>{objNamespace}</strong>\n        </>\n      )}\n      ?\n    </Trans>\n  );\n};\n\nexport default ConfirmActionMessage;","// import { KebabToggle } from \"@patternfly/react-core\";\n// import { CustomActionsToggleProps, IAction } from \"@patternfly/react-table\";\n// import React from \"react\";\n\n\n// export const defaultActions: IAction[] = [\n//     {\n//       title: 'Some action',\n//       onClick: event => {\n//         event.stopPropagation();\n//         console.log('clicked on Some action');\n//       }\n//     },\n//     {\n//       title: <a href=\"https://www.patternfly.org\">Link action</a>,\n//       onClick: event => {\n//         event.stopPropagation();\n//         console.log('clicked on Link action');\n//       }\n//     },\n//     {\n//       isSeparator: true\n//     },\n//     {\n//       title: 'Third action',\n//       onClick: event => {\n//         event.stopPropagation();\n//         console.log('clicked on Third action');\n//       }\n//     }\n// ];\n\n// export const customActionsToggle = (props: CustomActionsToggleProps) => (\n//     <KebabToggle\n//       isDisabled={props.isDisabled}\n//       onToggle={(value, event) => {\n//         props.onToggle(value);\n//         event.stopPropagation();\n//       }}\n//     />\n//   );\n\nimport * as React from 'react';\nimport { k8sDelete } from '@openshift-console/dynamic-plugin-sdk';\n\nimport {\n  ButtonVariant,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport { CronTabKind, CronTabModel } from '@crontab-model';\nimport TabModal from './TabModal/TabModal';\nimport ConfirmActionMessage from './ConfirmActionMessage/ConfirmActionMessage';\nimport { useModal } from '@crontab-utils/components/ModalProvider/ModalProvider';\n\n// import { useEditDiskStates } from '../hooks/useEditDiskState';\n\ntype DiskRowActionsProps = {\n  obj?: CronTabKind;\n};\n\nconst CronTabActions: React.FC<DiskRowActionsProps> = ({ obj }) => {\n//   const { t } = useKubevirtTranslation();\n//   const { vm, updateVM, tabsData, updateTabsData } = useWizardVMContext();\nconst { createModal } = useModal();\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n//   const deleteBtnText = t('Detach');\n\n//   const { initialDiskState, initialDiskSourceState } = useEditDiskStates(vm, diskName);\n\n  const onDelete = React.useCallback(() => {\n      return k8sDelete({\n        model: CronTabModel,\n        resource: obj,\n      })\n        .catch(console.error)\n        // .finally(() => updateVM(vmWithDeletedDisk)) as Promise<V1VirtualMachine>;\n\n    // return updateVM(vmWithDeletedDisk);\n  }, [obj/*diskName, tabsData?.disks?.dataVolumesToAddOwnerRef, updateVM, vm*/]);\n\n  const t = (key: string) => key;\n  \n  const onDeleteModalToggle = () => {\n    createModal(({ isOpen, onClose }) => (\n      <TabModal<CronTabKind>\n        onClose={onClose}\n        isOpen={isOpen}\n        obj={obj}\n        onSubmit={onDelete}\n        headerText={t('Detach disk?')}\n        submitBtnText={'deleteBtnText'}\n        submitBtnVariant={ButtonVariant.danger}\n      >\n        <ConfirmActionMessage\n          obj={obj}\n          action=\"detach\"\n        />\n      </TabModal>\n    ));\n  };\n\n//   const onEditModalToggle = () => {\n//     createModal(({ isOpen, onClose }) => (\n//       <EditDiskModal\n//         vm={vm}\n//         isOpen={isOpen}\n//         onClose={onClose}\n//         headerText={t('Edit disk')}\n//         onSubmit={updateVM}\n//         initialDiskState={initialDiskState}\n//         initialDiskSourceState={initialDiskSourceState}\n//         createOwnerReference={false}\n//         onUploadedDataVolume={(dataVolume) =>\n//           updateTabsData((draft) => {\n//             ensurePath(draft, 'disks.dataVolumesToAddOwnerRef');\n//             if (draft.disks) {\n//               draft.disks.dataVolumesToAddOwnerRef = [\n//                 ...(tabsData?.disks?.dataVolumesToAddOwnerRef || []),\n//                 dataVolume,\n//               ];\n//             }\n//           })\n//         }\n//       />\n//     ));\n//   };\n\n  return (\n    <Dropdown\n      menuAppendTo={getContentScrollableElement}\n      onSelect={() => setIsDropdownOpen(false)}\n      toggle={<KebabToggle onToggle={setIsDropdownOpen} id=\"toggle-id-disk\" />}\n      isOpen={isDropdownOpen}\n      isPlain\n      dropdownItems={[\n        <DropdownItem onClick={()=>{}/*onEditModalToggle*/} key=\"disk-edit\">\n          {/*t(*/'Edit'/*)*/}\n        </DropdownItem>,\n        <DropdownItem onClick={onDeleteModalToggle} key=\"disk-delete\">\n          {'deleteBtnText'}\n        </DropdownItem>,\n      ]}\n      position={DropdownPosition.right}\n    />\n  );\n};\n\nexport const getContentScrollableElement = (): HTMLElement =>\n  document.getElementById('content-scrollable');\n\nexport default CronTabActions;\n\n","import * as React from 'react';\n\nimport { K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';\nimport {\n  ActionList,\n  ActionListItem,\n  Alert,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\n\n// import './TabModal.scss';\n\ntype TabModalProps<T extends K8sResourceCommon = K8sResourceCommon> = {\n  isOpen: boolean;\n  obj?: T;\n  onSubmit: (obj: T) => Promise<T | T[] | void>;\n  onClose: () => Promise<void> | void;\n  headerText: string;\n  children: React.ReactNode;\n  isDisabled?: boolean;\n  submitBtnText?: string;\n  modalVariant?: ModalVariant;\n  positionTop?: boolean;\n  submitBtnVariant?: ButtonVariant;\n  titleIconVariant?:\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'default'\n    | React.ComponentType<any>;\n};\n\nexport type TabModalFC = <T extends K8sResourceCommon = K8sResourceCommon>(\n  props: TabModalProps<T>,\n) => JSX.Element;\n\nconst TabModal: TabModalFC = React.memo(\n  ({\n    obj,\n    onSubmit,\n    isOpen,\n    onClose,\n    headerText,\n    children,\n    isDisabled,\n    submitBtnText,\n    modalVariant,\n    positionTop = true,\n    submitBtnVariant,\n    titleIconVariant,\n  }) => {\n\n    const [isSubmitting, setIsSubmitting] = React.useState(false);\n    const [error, setError] = React.useState(undefined);\n\n    const handleSubmit: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n      e.preventDefault();\n      setIsSubmitting(true);\n      setError(undefined);\n\n      onSubmit(obj)\n        .then(onClose)\n        .catch(setError)\n        .finally(() => setIsSubmitting(false));\n    };\n\n    const t = (key: string) => key;\n\n    const closeModal = () => {\n      setError(undefined);\n      setIsSubmitting(false);\n\n      const promise = onClose();\n\n      if (promise) promise?.catch(setError);\n    };\n\n    return (\n      <Modal\n        variant={modalVariant ?? 'small'}\n        position={positionTop ? 'top' : undefined}\n        className=\"ocs-modal\"\n        onClose={closeModal}\n        title={headerText}\n        titleIconVariant={titleIconVariant}\n        footer={\n          <Stack className=\"kv-tabmodal-footer\" hasGutter>\n            {error && (\n              <StackItem>\n                <Alert isInline variant={AlertVariant.danger} title={t('An error occurred')}>\n                  <Stack hasGutter>\n                    <StackItem>{error.message}</StackItem>\n                    {error?.href && (\n                      <StackItem>\n                        <a href={error.href} target=\"_blank\" rel=\"noreferrer\">\n                          {error.href}\n                        </a>\n                      </StackItem>\n                    )}\n                  </Stack>\n                </Alert>\n              </StackItem>\n            )}\n            <StackItem>\n              <ActionList>\n                <ActionListItem>\n                  <Button\n                    onClick={handleSubmit}\n                    isDisabled={isDisabled || isSubmitting}\n                    isLoading={isSubmitting}\n                    variant={submitBtnVariant ?? 'primary'}\n                  >\n                    {submitBtnText || t('Save')}\n                  </Button>\n                </ActionListItem>\n                <ActionListItem>\n                  <Button onClick={closeModal} variant=\"link\">\n                    {t('Cancel')}\n                  </Button>\n                </ActionListItem>\n              </ActionList>\n            </StackItem>\n          </Stack>\n        }\n        isOpen={isOpen}\n        id=\"tab-modal\"\n      >\n        {children}\n      </Modal>\n    );\n  },\n);\n\nexport default TabModal;\n"],"names":[],"sourceRoot":""}