{"version":3,"file":"exposed-CronTabPage-chunk.js","mappings":";;;;;;;;;;;;;;;AAA+B;AAE/B,MAAM,OAAO,GAAa,GAAG,EAAE,CAAC,CAC9B,0DAAK,SAAS,EAAC,+BAA+B,eAAW,mBAAmB;IAC1E,0DAAK,SAAS,EAAC,sBAAsB,GAAG;IACxC,0DAAK,SAAS,EAAC,sBAAsB,GAAG;IACxC,0DAAK,SAAS,EAAC,wBAAwB,GAAG,CACtC,CACP,CAAC;AAEF,iEAAe,uCAAU,CAAC,OAAO,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACVnC,uDAAuD;AACvD,qBAAqB;AACU;AAEc;AAC7C,8DAA8D;AACgD;AACxC;AAGL;AAClB;AAQ/C,MAAM,cAAc,GAA+B,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/E,0CAA0C;IAC1C,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,0FAAmB,CAAoB;QAClE,gBAAgB,EAAE;YAChB,OAAO,EAAE,oBAAoB;YAC7B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI;SAChB;QACD,IAAI;QACJ,IAAI;QACJ,SAAS;KACV,CAAC,CAAC;IACH,MAAM,EAAE,CAAC,EAAE,GAAG,6DAAc,EAAE,CAAC;IAC/B,MAAM,KAAK,GAAG,0CAAa,CACzB,CAAC,OAAoB,EAAE,EAAE,CAAC;QACxB;YACE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,kBAAkB;SAC9B;QACD;YACE,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,wDAAe;SAC3B;KACF,EACD,EAAE,CACH,CAAC;IAEF,OAAO,CACL;;QAIG,MAAM,CAAC,CAAC,CAAC,CACR,iDAAC,gFAAa,IAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,GAAI,CACtD,CAAC,CAAC,CAAC,CACF,iDAAC,4DAAQ;YACP,iDAAC,8DAAO,OAAG,CACF,CACZ,CACA,CACJ,CAAC;AACJ,CAAC,CAAC;AASF,MAAM,kBAAkB,GAAsC,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE;IAEpF,OAAO,CACL;QACE,iDAAC,+DAAW;YACV,iDAAC,yDAAK,IAAC,YAAY,EAAC,IAAI,EAAC,SAAS,EAAC,oBAAoB,sBAE/C,CAEI,CACV,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;;;ACrF9B,uDAAuD;AACvD,qBAAqB;AACwB;AACiD;AAClC;AAC7B;AAyB/B,MAAM,eAAe,GAAmC,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;IAC3E,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAChB;QACE,iDAAC,+DAAW;YACV,iDAAC,yDAAK,IAAC,YAAY,EAAC,IAAI,EAAC,SAAS,EAAC,oBAAoB,sBAE/C,CACI,CACV,CACP,CAAC,CAAC,CAAC,CACF,iDAAC,2CAAc,IAAC,QAAQ,EAAE,8DAAO;QAC7B,iDAAC,qFAAkB,IAAC,eAAe,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,GAAI,CACtD,CAClB;AACH,CAAC,CAAC;AAEF,iEAAe,eAAe,EAAC","sources":["webpack://crontab-plugin/./utils/Loading.tsx","webpack://crontab-plugin/./views/CronTabPage.tsx","webpack://crontab-plugin/./views/CronTabYAMLPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst Loading: React.FC = () => (\n  <div className=\"co-m-loader co-an-fade-in-out\" data-test=\"loading-indicator\">\n    <div className=\"co-m-loader-dot__one\" />\n    <div className=\"co-m-loader-dot__two\" />\n    <div className=\"co-m-loader-dot__three\" />\n  </div>\n);\n\nexport default React.memo(Loading);\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-env node */\nimport * as React from 'react';\n\nimport Loading from '@crontab-utils/Loading';\n// import { CronTabModel } from '@crontab-model/CronTabModel';\nimport { HorizontalNav, useK8sWatchResource, K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';\nimport { Bullseye, PageSection, Title } from '@patternfly/react-core';\n\nimport { RouteComponentProps } from 'react-router';\nimport CronTabYAMLPage, { CronTabKind } from './CronTabYAMLPage';\nimport { useTranslation } from 'react-i18next';\n\ntype CronTabPageProps = {\n  name: string;\n  namespace: string;\n  kind: string;\n};\n\nconst CronTabNavPage: React.FC<CronTabPageProps> = ({ name, namespace, kind }) => {\n  // const { t } = useKubevirtTranslation();\n  const [dataSource, loaded] = useK8sWatchResource<K8sResourceCommon>({\n    groupVersionKind: {\n      \"group\": \"stable.example.com\",\n      \"kind\": \"CronTab\",\n      \"version\": \"v1\"\n    },\n    kind,\n    name,\n    namespace,\n  });\n  const { t } = useTranslation();\n  const pages = React.useMemo(\n    (cronTab: CronTabKind) => [\n      {\n        href: '',\n        name: 'Details',\n        component: CronTabDetailsPage,\n      },\n      {\n        href: 'yaml',\n        name: 'YAML',\n        component: CronTabYAMLPage,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      {/* <DataSourcePageTitle dataSource={dataSource} namespace={namespace} name={name} /> */}\n      \n      TEST\n      {loaded ? (\n        <HorizontalNav pages={pages} resource={dataSource} />\n      ) : (\n        <Bullseye>\n          <Loading />\n        </Bullseye>\n      )}\n    </>\n  );  \n};\n\ntype CronTabDetailsPageProps = RouteComponentProps<{\n  ns: string;\n  name: string;\n}> & {\n  obj?: any;\n};\n\nconst CronTabDetailsPage: React.FC<CronTabDetailsPageProps> = ({ obj: dataSource }) => {\n\n  return (\n    <div>\n      <PageSection>\n        <Title headingLevel=\"h2\" className=\"co-section-heading\">\n          CronTab details\n        </Title>\n\n      </PageSection>\n    </div>\n  );\n};\n\nexport default CronTabNavPage;","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-env node */\nimport Loading from '@crontab-utils/Loading';\nimport { K8sResourceCommon, ResourceYAMLEditor } from '@openshift-console/dynamic-plugin-sdk';\nimport { PageSection, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\n\n// import Loading from '@crontab-utils/Loading';\n// // import { CronTabModel } from '@crontab-model/CronTabModel';\n// import { HorizontalNav, useK8sWatchResource, K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';\n// import { Bullseye, PageSection, Title } from '@patternfly/react-core';\n\n// import { RouteComponentProps } from 'react-router';\n\nexport type CronTabKind = K8sResourceCommon & {\n    spec?: {\n      [key: string]: any;\n    };\n    status?: { [key: string]: any };\n  };\n\n\ntype CronTabYAMLPageProps = RouteComponentProps<{\n    ns: string;\n    name: string;\n}> & {\n    obj?: CronTabKind;\n}\n\nconst CronTabYAMLPage: React.FC<CronTabYAMLPageProps> = ({ obj: cronTab }) => {\n  return !cronTab ? (\n    <div>\n      <PageSection>\n        <Title headingLevel=\"h2\" className=\"co-section-heading\">\n          CronTab details\n        </Title>\n      </PageSection>\n    </div>\n  ) : (\n    <React.Suspense fallback={Loading}>\n        <ResourceYAMLEditor initialResource={cronTab} header={'CronTab'} />\n    </React.Suspense>\n  )\n};\n\nexport default CronTabYAMLPage;"],"names":[],"sourceRoot":""}