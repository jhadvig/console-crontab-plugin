{"version":3,"file":"exposed-CronTabDetails-chunk.js","mappings":"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","sources":["webpack://crontab-plugin/./models/CronTabModel.ts","webpack://crontab-plugin/./models/index.ts","webpack://crontab-plugin/./utils/Loading.tsx","webpack://crontab-plugin/./utils/constants.ts","webpack://crontab-plugin/./utils/utils.ts","webpack://crontab-plugin/./views/CronTabDetails.tsx","webpack://crontab-plugin/./views/CronTabDetailsPage.tsx","webpack://crontab-plugin/./views/CronTabYAMLPage.tsx","webpack://crontab-plugin/./views/components/CronTabDetailsGrid.tsx","webpack://crontab-plugin/./views/components/CronTabPageTitle.tsx","webpack://crontab-plugin/./views/utils/DetailsItem.tsx"],"sourcesContent":["import { modelToRef } from '@crontab-utils/utils';\nimport { K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';\nimport { K8sModel } from '@openshift-console/dynamic-plugin-sdk/lib/api/common-types';\n\nexport const CronTabModel: K8sModel = {\n  label: 'CronTab',\n  labelPlural: 'CronTabs',\n  apiVersion: 'v1',\n  apiGroup: 'stable.example.com',\n  plural: 'crontabs',\n  abbr: 'crontabs',\n  namespaced: true,\n  kind: 'CronTab',\n  id: 'crontab',\n  crd: true,\n};\n\nexport type CronTabKind = K8sResourceCommon & {\n  spec?: {\n    [key: string]: any;\n  };\n  status?: { [key: string]: any };\n};\n\nexport const cronTabModelRef = modelToRef(CronTabModel);","export * from './CronTabModel';","import * as React from 'react';\n\nconst Loading: React.FC = () => (\n  <div className=\"co-m-loader co-an-fade-in-out\" data-test=\"loading-indicator\">\n    <div className=\"co-m-loader-dot__one\" />\n    <div className=\"co-m-loader-dot__two\" />\n    <div className=\"co-m-loader-dot__three\" />\n  </div>\n);\n\nexport default React.memo(Loading);\n","export const DEFAULT_NAMESPACE = 'default';","import { K8sModel } from '@openshift-console/dynamic-plugin-sdk/lib/api/common-types';\n\nconst modelToRef = (obj: K8sModel) => `${obj.apiGroup}~${obj.apiVersion}~${obj.kind}`;\nconst modelToGroupVersionKind = (obj: K8sModel) => ({\n  version: obj.apiVersion,\n  kind: obj.kind,\n  group: obj.apiGroup,\n});\n\nexport { modelToGroupVersionKind, modelToRef };","import * as React from 'react';\n\nimport Loading from '@crontab-utils/Loading';\nimport { \n  useK8sWatchResource, \n  K8sResourceCommon,\n  HorizontalNav,\n} from '@openshift-console/dynamic-plugin-sdk';\nimport { Bullseye } from '@patternfly/react-core';\nimport CronTabYAMLPage from './CronTabYAMLPage';\nimport CronTabDetailsPage from './CronTabDetailsPage';\nimport CronTabPageTitle from './components/CronTabPageTitle';\n\ntype CronTabPageProps = {\n  name: string;\n  namespace: string;\n  kind: string;\n};\n\nconst CronTabNavPage: React.FC<CronTabPageProps> = ({ name, namespace, kind }) => {\n  // const { t } = useKubevirtTranslation();\n  const [cronTab, loaded] = useK8sWatchResource<K8sResourceCommon>({\n    groupVersionKind: {\n      \"group\": \"stable.example.com\",\n      \"kind\": \"CronTab\",\n      \"version\": \"v1\"\n    },\n    kind,\n    name,\n    namespace,\n  });\n\n  const pages = React.useMemo(\n    () => [\n      {\n        href: '',\n        name: 'Details',\n        component: CronTabDetailsPage,\n      },\n      {\n        href: 'yaml',\n        name: 'YAML',\n        component: CronTabYAMLPage,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <CronTabPageTitle cronTab={cronTab} namespace={namespace} name={name} />\n    \n      {loaded ? (\n        // <HorizontalNav pages={pages} resource={dataSource} />\n        // <ResourceDetailsPage\n        //   {...props}\n        //   getResourceStatus={nodeStatus}\n        //   menuActions={menuActions}\n        //   pagesFor={pagesFor}\n        // />\n        \n        <HorizontalNav pages={pages} resource={cronTab} />\n      ) : (\n        <Bullseye>\n          <Loading />\n        </Bullseye>\n      )}\n    </>\n  );  \n};\n\nexport default CronTabNavPage;","import { PageSection, Title } from '@patternfly/react-core';\nimport * as React from 'react';\n\nimport { RouteComponentProps } from \"react-router\";\nimport { CronTabDetailsGrid } from './components/CronTabDetailsGrid';\n\n\ntype CronTabDetailsPageProps = RouteComponentProps<{\n    ns: string;\n    name: string;\n}> & {\n        obj?: any;\n};\n  \nconst CronTabDetailsPage: React.FC<CronTabDetailsPageProps> = ({ obj }) => {\n    return (\n        <div>\n        <PageSection>\n            <Title headingLevel=\"h2\" className=\"co-section-heading\">\n            CronTab details\n            </Title>\n        </PageSection>\n        \n        <PageSection>\n            <CronTabDetailsGrid cronTab={obj}/>\n        </PageSection>\n        </div>\n    );\n};\n\nexport default CronTabDetailsPage;","import * as React from 'react';\nimport Loading from '@crontab-utils/Loading';\nimport { ResourceYAMLEditor } from '@openshift-console/dynamic-plugin-sdk';\nimport { PageSection, Title } from '@patternfly/react-core';\nimport { RouteComponentProps } from 'react-router';\nimport { CronTabKind } from '@crontab-model'; \n\ntype CronTabYAMLPageProps = RouteComponentProps<{\n    ns: string;\n    name: string;\n}> & {\n    obj?: CronTabKind;\n}\n\nconst CronTabYAMLPage: React.FC<CronTabYAMLPageProps> = ({ obj: cronTab }) => {\n  return !cronTab ? (\n    <div>\n      <PageSection>\n        <Title headingLevel=\"h2\" className=\"co-section-heading\">\n          CronTab details\n        </Title>\n      </PageSection>\n    </div>\n  ) : (\n    <React.Suspense fallback={Loading}>\n        <ResourceYAMLEditor initialResource={cronTab} header={'CronTab'} />\n    </React.Suspense>\n  )\n};\n\nexport default CronTabYAMLPage;","import * as React from 'react';\nimport { \n    DescriptionList,\n    DescriptionListDescription,\n    DescriptionListGroup,\n    DescriptionListTerm,\n    DescriptionListTermHelpText,\n    DescriptionListTermHelpTextButton,\n    LabelGroup,\n    Popover,\n} from '@patternfly/react-core';\nimport { CronTabKind } from '@crontab-model';\nimport { DetailsItem } from '../utils/DetailsItem';\n// import { useModal } from '@crontab-utils/components/ModalProvider/ModalProvider';\n\nexport type CronTabDetailsGridProps = {\n    cronTab: CronTabKind;\n}\n\nexport const CronTabDetailsGrid: React.FC<CronTabDetailsGridProps> = ({ cronTab }) => {\n    // const { createModal } = useModal();\n    return (\n        <DescriptionList>\n            <DescriptionListGroup>\n                <DescriptionListTermHelpText>\n                    <Popover headerContent={<div>Name</div>} bodyContent={<div>Additional name info</div>}>\n                        <DescriptionListTermHelpTextButton> Name </DescriptionListTermHelpTextButton>\n                    </Popover>\n                </DescriptionListTermHelpText>\n                <DescriptionListDescription>{cronTab.metadata.name}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n                <DescriptionListTerm>Namespace</DescriptionListTerm>\n                <DescriptionListDescription>\n                    <a href=\"#\">mary-test</a>\n                </DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n                <DescriptionListTermHelpText>\n                    <Popover headerContent={<div>Labels</div>} bodyContent={<div>Additional labels info</div>}>\n                        <DescriptionListTermHelpTextButton> Labels </DescriptionListTermHelpTextButton>\n                    </Popover>\n                </DescriptionListTermHelpText>\n                {/* <LabelGroup numLabels={20} isEditable>{['dsadas', 'label123']}</LabelGroup> */}\n                <DetailsItem\n                    label={/*t(*/'public~Labels'/*)*/}\n                    obj={cronTab}\n                    path=\"metadata.labels\"\n                    valueClassName=\"details-item__value--labels\"\n                    // onEdit={(e) => editLabelsModal(e, { resource, kind: model })}\n                    canEdit={/*showLabelEditor && canUpdate*/true}\n                    editAsGroup\n                ></DetailsItem>\n            </DescriptionListGroup>\n        </DescriptionList>\n    )\n}","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { CronTabKind, cronTabModelRef } from '../../models/CronTabModel';\nimport { DEFAULT_NAMESPACE } from '@crontab-utils/constants';\n// import DataSourceActions from '../actions/DataSourceActions';\n// import { isDataSourceReady } from '../utils';\n\ntype CronTabPageTitleProps = {\n  cronTab: CronTabKind;\n  name: string;\n  namespace: string;\n};\n\nconst CronTabPageTitle: React.FC<CronTabPageTitleProps> = ({\n  cronTab,\n  name,\n  namespace,\n}) => {\n  return (\n    <>\n      <div className=\"pf-c-page__main-breadcrumb\">\n        <Breadcrumb className=\"pf-c-breadcrumb co-breadcrumb\">\n          <BreadcrumbItem>\n            <Link to={`/k8s/ns/${namespace || DEFAULT_NAMESPACE}/${cronTabModelRef}`}>\n              {'CronTabs'}\n            </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>{'CronTab Details'}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className=\"co-m-nav-title co-m-nav-title--detail co-m-nav-title--breadcrumbs\">\n        <span className=\"co-m-pane__heading\">\n          <h1 className=\"co-m-pane__name co-resource-item\">\n            <span className=\"co-m-resource-icon co-m-resource-icon--lg\">{'DS'}</span>\n            <span data-test-id=\"resource-title\" className=\"co-resource-item__resource-name\">\n              {name ?? cronTab?.metadata?.name}{' '}\n            </span>\n            {/* {isDataSourceReady(dataSource) && (\n              <span className=\"dps-resource-item__resource-status hidden-xs\">\n                <Label isCompact>{t('Ready')}</Label>\n              </span>\n            )} */}\n          </h1>\n          <div className=\"co-actions\">\n            {/* <DataSourceActions dataSource={dataSource} /> */}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default CronTabPageTitle;\n","import { CronTabKind, cronTabModelRef } from \"@crontab-model\";\nimport { K8sGroupVersionKind, useK8sModel } from \"@openshift-console/dynamic-plugin-sdk\";\nimport { Button, Popover, Split, SplitItem } from \"@patternfly/react-core\";\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport React from \"react\";\n\nexport const DetailsItem: React.FC<DetailsItemProps> = ({\n    children,\n    defaultValue = '-',\n    description,\n    editAsGroup,\n    label,\n    labelClassName,\n    obj,\n    onEdit,\n    canEdit = true,\n    path,\n    valueClassName,\n  }) => {\n    // const { t } = useTranslation();\n    const [model] = useK8sModel(obj ? cronTabModelRef : '');\n    const popoverContent: string = 'popoverContent;'/*description ?? getPropertyDescription(model, path);*/\n    const value: React.ReactNode = children;\n    const editable = onEdit && canEdit;\n    return /*hide*/false ? null : (\n      <>\n        <dt\n        //   className={classnames('details-item__label', labelClassName)}\n          data-test-selector={`details-item-label__${label}`}\n        >\n          <Split>\n            <SplitItem className=\"details-item__label\">\n              {popoverContent || path ? (\n                <Popover\n                  headerContent={<div>{label}</div>}\n                  {...(popoverContent && {\n                    bodyContent: (\n                    //   <LinkifyExternal>\n                    //     <div className=\"co-pre-line\">{popoverContent}</div>\n                    //   </LinkifyExternal>\n                    <>Link?</>\n                    ),\n                  })}\n                //   {...(path && { footerContent: <PropertyPath kind={model?.kind} path={path} /> })}\n                  maxWidth=\"30rem\"\n                >\n                  <Button data-test={label} variant=\"plain\" className=\"details-item__popover-button\">\n                    {label}\n                  </Button>\n                </Popover>\n              ) : (\n                label\n              )}\n            </SplitItem>\n            {/*editable && editAsGroup*/true && (\n              <>\n                <SplitItem isFilled />\n                <SplitItem>\n                  <EditButton testId={label} onClick={onEdit}>\n                    {/*t(*/'public~Edit'/*)*/}\n                  </EditButton>\n                </SplitItem>\n              </>\n            )}\n          </Split>\n        </dt>\n        <dd\n        //   className={classnames('details-item__value', valueClassName, {\n        //     'details-item__value--group': editable && editAsGroup,\n        //   })}\n          data-test-selector={`details-item-value__${label}`}\n        >\n          {editable && !editAsGroup ? (\n            <EditButton testId={label} onClick={onEdit}>\n              {value}\n            </EditButton>\n          ) : (\n            value\n          )}\n        </dd>\n      </>\n    );\n  };\n  \nexport type DetailsItemProps = {\n    canEdit?: boolean;\n    defaultValue?: React.ReactNode;\n    description?: string;\n    editAsGroup?: boolean;\n    hideEmpty?: boolean;\n    label: string;\n    labelClassName?: string;\n    obj?: CronTabKind;\n    onEdit?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n    path?: string | string[];\n    valueClassName?: string;\n};\n\nconst EditButton: React.SFC<EditButtonProps> = (props) => {\n    return (\n        <Button\n        type=\"button\"\n        variant=\"link\"\n        isInline\n        onClick={props.onClick}\n        data-test={\n            props.testId ? `${props.testId}-details-item__edit-button` : 'details-item__edit-button'\n        }\n        >\n        {props.children}\n        <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n        </Button>\n    );\n};\n\ntype EditButtonProps = {\n    onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n    testId?: string;\n  };\n\n//   export const PropertyPath: React.FC<{ kind: string; path: string | string[] }> = ({\n//     kind,\n//     path,\n//   }) => {\n//     const pathArray: string[] = _.toPath(path);\n//     return (\n//       <Breadcrumb className=\"co-breadcrumb\">\n//         <BreadcrumbItem>{kind}</BreadcrumbItem>\n//         {pathArray.map((property, i) => {\n//           const isLast = i === pathArray.length - 1;\n//           return (\n//             <BreadcrumbItem key={i} isActive={isLast}>\n//               {property}\n//             </BreadcrumbItem>\n//           );\n//         })}\n//       </Breadcrumb>\n//     );\n//   };"],"names":[],"sourceRoot":""}